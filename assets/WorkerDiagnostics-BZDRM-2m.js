const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/worker-pool-Cdl-1LoG.js","assets/index-DWBRBwG1.js","assets/index-Zz0iR4Wb.css"])))=>i.map(i=>d[i]);
import{aG as G,f as P,k as D,aK as A,as as J,aj as j,a as m,ah as y,au as S,ak as N,ae as M,ag as k,ai as l,X as B,ao as x,al as F,am as V,ar as X,af as b}from"./index-DWBRBwG1.js";import{w as z}from"./worker-pool-Cdl-1LoG.js";function H(r,f=""){const a={context:f,timestamp:new Date().toISOString(),type:r.type||"unknown",message:r.message||"No message",filename:r.filename||"Unknown file",lineno:r.lineno||"Unknown line",colno:r.colno||"Unknown column"};r.error&&(a.errorObject={name:r.error.name||"Unknown",message:r.error.message||"No message",stack:r.error.stack||"No stack trace"});try{const d=Object.getOwnPropertyNames(r);a.eventProperties={},d.forEach(w=>{try{const v=r[w];typeof v!="function"&&(a.eventProperties[w]=v)}catch(v){a.eventProperties[w]=`[Unable to access: ${v.message}]`}})}catch(d){a.serializationError=d.message}return a}const q=G("workerDiagnostics",()=>{const r=P({}),f=P(!1),a=P(null),d=D(()=>Object.values(r.value).some(t=>t&&t.status==="error")),w=D(()=>Object.keys(r.value).length),v=D(()=>Object.values(r.value).filter(t=>t&&t.status==="success").length);function O(){const t=navigator.userAgent;return{userAgent:t,isIOS:/iPad|iPhone|iPod/.test(t),isSafari:/Safari/.test(t)&&!/Chrome/.test(t),isChrome:/Chrome/.test(t),isFirefox:/Firefox/.test(t),isMobile:/Mobile|Android|iPhone|iPad/.test(t),hardwareConcurrency:navigator.hardwareConcurrency||4,language:navigator.language,platform:navigator.platform,cookieEnabled:navigator.cookieEnabled,onLine:navigator.onLine,serviceWorkerSupport:"serviceWorker"in navigator,webWorkerSupport:typeof Worker<"u",sharedWorkerSupport:typeof SharedWorker<"u",urlSupport:typeof URL<"u",blobSupport:typeof Blob<"u",fetchSupport:typeof fetch<"u"}}async function C(){try{if(typeof Worker>"u")throw new Error("瀏覽器不支援 Web Workers");const t=`
                self.onmessage = function(e) {
                    self.postMessage({ type: 'pong', data: e.data });
                };
            `,u=new Blob([t],{type:"application/javascript"}),o=new Worker(URL.createObjectURL(u));return new Promise((p,e)=>{const s=setTimeout(()=>{o.terminate(),e(new Error("Worker 通訊超時"))},5e3);o.onmessage=n=>{clearTimeout(s),o.terminate(),n.data.type==="pong"?p({status:"success",message:"基本 Worker 測試通過"}):e(new Error("Worker 回應格式錯誤"))},o.onerror=n=>{const i=H(n,"基本 Worker 測試");console.error("🚨 基本 Worker 測試錯誤詳情:",i),clearTimeout(s),o.terminate(),e(new Error(`Worker 錯誤: ${i.message} (詳情請查看 console)`))},o.postMessage({test:"ping"})})}catch(t){return{status:"error",message:t.message}}}async function W(){try{const t=`
                self.onmessage = function(e) {
                    self.postMessage({ type: 'module-pong', data: e.data });
                };
            `,u=new Blob([t],{type:"application/javascript"}),o=new Worker(URL.createObjectURL(u),{type:"module"});return new Promise((p,e)=>{const s=setTimeout(()=>{o.terminate(),e(new Error("ES Module Worker 通訊超時"))},5e3);o.onmessage=n=>{clearTimeout(s),o.terminate(),n.data.type==="module-pong"?p({status:"success",message:"ES Module Worker 測試通過"}):e(new Error("ES Module Worker 回應格式錯誤"))},o.onerror=n=>{const i=H(n,"ES Module Worker 測試");console.error("🚨 ES Module Worker 測試錯誤詳情:",i),clearTimeout(s),o.terminate(),e(new Error(`ES Module Worker 錯誤: ${i.message} (詳情請查看 console)`))},o.postMessage({test:"module-ping"})})}catch(t){return{status:"error",message:t.message}}}async function E(){try{const{wrap:t,expose:u}=await A(async()=>{const{wrap:n,expose:i}=await import("./worker-pool-Cdl-1LoG.js").then(c=>c.c);return{wrap:n,expose:i}},__vite__mapDeps([0,1,2])),o=`
                // 直接使用 CDN 版本避免模組系統問題
                importScripts('https://unpkg.com/comlink/dist/umd/comlink.js');
                
                const api = {
                    ping: () => ({ type: 'comlink-pong', timestamp: Date.now() }),
                    add: (a, b) => a + b,
                };
                
                Comlink.expose(api);
            `,p=new Blob([o],{type:"application/javascript"}),e=new Worker(URL.createObjectURL(p)),s=t(e);return new Promise(async(n,i)=>{const c=setTimeout(()=>{e.terminate(),i(new Error("Comlink 測試超時"))},1e4);try{await new Promise(U=>setTimeout(U,1e3));const _=await s.ping(),I=await s.add(2,3);clearTimeout(c),e.terminate(),_.type==="comlink-pong"&&I===5?n({status:"success",message:"Comlink 測試通過"}):i(new Error("Comlink 功能測試失敗"))}catch(_){clearTimeout(c),e.terminate(),i(_)}})}catch(t){return{status:"error",message:t.message}}}async function T(){try{const{IOSWorkerPool:t,createIOSWeeklyPolicyWorker:u}=await A(async()=>{const{IOSWorkerPool:n,createIOSWeeklyPolicyWorker:i}=await import("./worker-pool-Cdl-1LoG.js").then(c=>c.i);return{IOSWorkerPool:n,createIOSWeeklyPolicyWorker:i}},__vite__mapDeps([0,1,2]));console.log("測試 iOS Worker Pool...");const o=new t(u,1);if(await o.waitForInitialization(),o.initError)throw o.initError;const p=await o.execute("ping");console.log("iOS Worker ping 結果:",p);const e={stockId:"TEST",dailyData:[["2024-01-01",100,105,95,102,1e3],["2024-01-02",102,108,100,106,1200],["2024-01-03",106,110,104,108,800]]},s=await o.execute("processPolicy",e);return console.log("iOS Worker 計算結果:",s),o.destroy(),{status:"success",message:"iOS Worker 測試通過",data:{pingResult:p,calcResult:s}}}catch(t){return{status:"error",message:`iOS Worker 測試失敗: ${t.message}`}}}async function R(){const t={};try{await z.waitForAllInitialization();const u=z.getAllStatus();for(const[o,p]of Object.entries(u))try{const e=z.pools.get(o);if(e&&e.initialized){const s=await e.execute("ping");t[o]={status:"success",message:`Pool ${o} ping 成功`,data:{poolStatus:p,pingResult:s}}}else t[o]={status:"error",message:`Pool ${o} 未初始化或不可用`}}catch(e){t[o]={status:"error",message:`Pool ${o} 測試失敗: ${e.message}`}}}catch(u){t.general={status:"error",message:`Worker Pool 初始化失敗: ${u.message}`}}return t}async function $(){f.value=!0,r.value={},a.value=new Date;try{console.log("🔍 開始 Worker 診斷測試..."),r.value.environment={status:"success",message:"環境檢測完成",data:O()},console.log("測試基本 Worker 支援..."),r.value.basicWorker=await C(),console.log("測試 ES Module Worker 支援..."),r.value.moduleWorker=await W(),console.log("測試 Comlink 支援..."),r.value.comlink=await E(),r.value.environment.data.isIOS&&(console.log("執行 iOS 專用測試..."),r.value.iosWorker=await T()),console.log("測試 Worker Pools...");const t=await R();Object.assign(r.value,t),console.log("✅ Worker 診斷測試完成")}catch(t){console.error("❌ 診斷測試過程中發生錯誤:",t),r.value.error={status:"error",message:`診斷過程錯誤: ${t.message}`}}finally{f.value=!1}}function L(){r.value={},a.value=null}return{diagnosticResults:r,isRunning:f,lastRunTime:a,hasErrors:d,totalTests:w,passedTests:v,detectEnvironment:O,testBasicWorkerSupport:C,testModuleWorkerSupport:W,testComlinkSupport:E,testWorkerPools:R,runFullDiagnostics:$,clearResults:L}}),Q={class:"worker-diagnostics"},Y={class:"diagnostic-content"},Z={class:"action-buttons"},ee={class:"result-title"},te={class:"title-text"},oe={class:"detail-popup"},re={class:"detail-content"},se={__name:"WorkerDiagnostics",setup(r){const f=q(),{diagnosticResults:a,isRunning:d,lastRunTime:w,hasErrors:v,totalTests:O,passedTests:C}=f,W=P(!1),E=P(""),T=P(null);async function R(){await f.runFullDiagnostics()}function $(){f.clearResults()}function L(e){return X(e).format("MM-DD HH:mm:ss")}function t(e){return{environment:"環境檢測",basicWorker:"基本 Worker",moduleWorker:"ES Module Worker",comlink:"Comlink 框架",iosWorker:"iOS 專用 Worker",policy:"Policy Worker Pool",trade:"Trade Worker Pool",trend:"Trend Worker Pool",error:"錯誤資訊",general:"一般狀態"}[e]||e}function u(e,s){E.value=t(e),T.value=s,W.value=!0}function o(e){return{"是否為 iOS":e.isIOS?"是":"否","是否為 Safari":e.isSafari?"是":"否",是否為行動裝置:e.isMobile?"是":"否","CPU 核心數":e.hardwareConcurrency,"Web Worker 支援":e.webWorkerSupport?"支援":"不支援","Service Worker 支援":e.serviceWorkerSupport?"支援":"不支援","Fetch 支援":e.fetchSupport?"支援":"不支援",網路狀態:e.onLine?"線上":"離線",平台:e.platform,語言:e.language}}function p(e){return typeof e=="boolean"?e?"是":"否":String(e)}return(e,s)=>{const n=S("van-nav-bar"),i=S("van-tag"),c=S("van-cell"),_=S("van-cell-group"),I=S("van-button"),U=S("van-icon"),K=S("van-popup");return b(),j("div",Q,[m(n,{title:"Worker 診斷工具","left-arrow":"",onClickLeft:s[0]||(s[0]=g=>e.$router.back())}),y("div",Y,[m(_,{title:"診斷總覽",inset:""},{default:k(()=>[m(c,null,{title:k(()=>s[3]||(s[3]=[y("span",{class:"cell-title"},"測試狀態",-1)])),value:k(()=>[m(i,{type:l(d)?"warning":l(v)?"danger":"success",size:"medium"},{default:k(()=>[B(x(l(d)?"執行中...":l(v)?"有錯誤":"正常"),1)]),_:1},8,["type"])]),_:1}),m(c,{title:"通過測試",value:`${l(C)}/${l(O)}`},null,8,["value"]),m(c,{title:"最後執行",value:l(w)?L(l(w)):"尚未執行"},null,8,["value"])]),_:1}),y("div",Z,[m(I,{type:"primary",size:"large",loading:l(d),onClick:R,block:""},{default:k(()=>[B(x(l(d)?"診斷中...":"開始診斷"),1)]),_:1},8,["loading"]),m(I,{type:"default",size:"large",onClick:$,disabled:l(d),block:"",style:{"margin-top":"12px"}},{default:k(()=>s[4]||(s[4]=[B(" 清除結果 ",-1)])),_:1,__:[4]},8,["disabled"])]),Object.keys(l(a)).length>0?(b(!0),j(F,{key:0},V(l(a),(g,h)=>(b(),M(_,{key:h,title:t(h),inset:"",style:{"margin-top":"16px"}},{default:k(()=>[m(c,null,{title:k(()=>[y("div",ee,[m(U,{name:g.status==="success"?"success":"cross",color:g.status==="success"?"#07c160":"#ee0a24",size:"16"},null,8,["name","color"]),y("span",te,x(g.message),1)])]),_:2},1024),g.data?(b(),M(c,{key:0,title:"詳細資料","is-link":"",onClick:ne=>u(h,g.data)},null,8,["onClick"])):N("",!0)]),_:2},1032,["title"]))),128)):N("",!0),l(a).environment?.data?(b(),M(_,{key:1,title:"環境資訊",inset:"",style:{"margin-top":"16px"}},{default:k(()=>[(b(!0),j(F,null,V(o(l(a).environment.data),(g,h)=>(b(),M(c,{key:h,title:h,value:p(g)},null,8,["title","value"]))),128))]),_:1})):N("",!0)]),m(K,{show:W.value,"onUpdate:show":s[2]||(s[2]=g=>W.value=g),position:"bottom",style:{height:"70%"}},{default:k(()=>[y("div",oe,[m(n,{title:E.value,"left-text":"關閉",onClickLeft:s[1]||(s[1]=g=>W.value=!1)},null,8,["title"]),y("div",re,[y("pre",null,x(JSON.stringify(T.value,null,2)),1)])])]),_:1},8,["show"])])}}},le=J(se,[["__scopeId","data-v-d912630a"]]);export{le as default};
